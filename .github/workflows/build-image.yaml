name: BuildImage
on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            oamdev/vector-controller
            ghcr.io/kubevela/oamdev/vector-controller
          tags: |
            type=ref,event=tag
      - name: Login docker.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./cmd/apiserver/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish-charts:
    env:
      HELM_CHART: chart/
      LOCAL_OSS_DIRECTORY: .oss/
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Get the vars
        id: vars
        run: |
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: kubevela/vector-controller
          releases-only: true
        id: latest_tag
      - name: Tag helm chart image
        run: |
          latest_repo_tag=${{ steps.latest_tag.outputs.tag }}
          sub="."
          major="$(cut -d"$sub" -f1 <<<"$latest_repo_tag")"
          minor="$(cut -d"$sub" -f2 <<<"$latest_repo_tag")"
          patch="0"
          current_repo_tag="$major.$minor.$patch"
          image_tag=${GITHUB_REF#refs/tags/}
          chart_version=$latest_repo_tag
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            image_tag=latest
            chart_version=${current_repo_tag}-nightly-build
          fi
          sed -i "s/latest/${image_tag}/g" $HELM_CHART/values.yaml
          chart_semver=${chart_version#"v"}
          sed -i "s/0.1.0/$chart_semver/g" $HELM_CHART/Chart.yaml
      - name: Install ossutil
        run: wget http://gosspublic.alicdn.com/ossutil/1.7.0/ossutil64 && chmod +x ossutil64 && mv ossutil64 ossutil
      - name: Configure Alibaba Cloud OSSUTIL
        run: ./ossutil --config-file .ossutilconfig config -i ${ACCESS_KEY} -k ${ACCESS_KEY_SECRET} -e ${ENDPOINT} -c .ossutilconfig
      - name: sync cloud to local
        run: ./ossutil --config-file .ossutilconfig sync oss://$BUCKET/core $LOCAL_OSS_DIRECTORY
      - name: Package helm charts
        run: |
          helm package $HELM_CHART --destination $LOCAL_OSS_DIRECTORY
          helm repo index --url https://$BUCKET.$ENDPOINT/core $LOCAL_OSS_DIRECTORY
      - name: sync local to cloud
        run: ./ossutil --config-file .ossutilconfig sync $LOCAL_OSS_DIRECTORY oss://$BUCKET/core -f
